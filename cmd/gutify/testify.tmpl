{{- if .PackageName }}
package {{ .PackageName }}
{{- end }}

{{- if .Imports }}
import (
    "testing"
    "github.com/stretchr/testify/require"
    {{- range .Imports }}
    {{ . }}
    {{- end }}
)
{{- end }}

{{ range .Functions }}
func Test_{{ .Name }}(t *testing.T) {
    {{- if .Args }}
    type args {{ generics .Generics }} struct {
        {{- range .Args }}
        {{ .Name }} {{ .Type }}
        {{- end }}
    }
    {{ end }}
    {{- if .Results }}
    type want {{ generics .Generics }} struct {
        {{- range .Results }}
        {{ .Name }} {{ .Type }}
        {{- end }}
    }
    {{ end }}
    testcases := []struct {
        name string
        {{- if .Args }}
        args args {{ generics_args .Generics }}
        {{- end }}
        {{- if .Results }}
        want want {{ generics_args .Generics }}
        {{- end }}
    }{
        {},
    }

    for _, tt := range testcases {
        t.Run(tt.name, func(t *testing.T) {
            {{- $got_results := .Results | collect "Name" | to_got }}
            {{- $want_args := .Args | collect "Name" | prefix "tt.args." | join ", " }}
            {{- if .Results }}
            {{ $got_results | join ", " }} := {{ .Name }}({{ $want_args }})
            {{- else }}
            {{ .Name }}({{ $want_args }})
            {{- end }}
            {{- if .Results }}
            {{- $want_results := .Results | collect "Name" | prefix "tt.want." }}
            {{ range $index, $result := $got_results }}
            require.Equal(t, {{ index $want_results $index }}, {{ $result }})
            {{- end }}
            {{- end }}
        })
    }
}
{{ end }}